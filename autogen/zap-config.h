// This file is generated by ZCL Advanced Platform generator. Please don't edit manually.

// The following is brought in by the endianness component, which all
// applications must include
#include "sl_endianness.h"

#ifndef SILABS_AF_ENDPOINT_CONFIG
#define SILABS_AF_ENDPOINT_CONFIG 1

// Default values for the attributes longer than a pointer, in a form of a
// binary blob. All attribute values with size greater than 2 bytes. Excluding 0
// values and externally saved values. Separate block is generated for
// big-endian and little-endian cases.

#define GENERATED_DEFAULTS_COUNT (0)
#define GENERATED_DEFAULTS { }


// This is an array of EmberAfAttributeMinMaxValue structures.

#define GENERATED_MIN_MAX_DEFAULT_COUNT (0)
	#define GENERATED_MIN_MAX_DEFAULTS { }


#define GENERATED_ATTRIBUTE_COUNT (32)

// This is an array of EmberAfAttributeMetadata structures.
#define GENERATED_ATTRIBUTES { \
  { 0x0000, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x08  } }, /* 0 Cluster: Basic, Attribute: ZCL version, Side: server*/ \
		  { 0x0007, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x00  } }, /* 1 Cluster: Basic, Attribute: power source, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)3  } }, /* 2 Cluster: Basic, Attribute: cluster revision, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t*)2  } }, /* 3 Cluster: Identify, Attribute: cluster revision, Side: client*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_WRITABLE), { (uint8_t*)0x0000  } }, /* 4 Cluster: Identify, Attribute: identify time, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)2  } }, /* 5 Cluster: Identify, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0000  } }, /* 6 Cluster: Illuminance Measurement, Attribute: measured value, Side: server*/ \
		  { 0x0001, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 7 Cluster: Illuminance Measurement, Attribute: min measured value, Side: server*/ \
		  { 0x0002, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 8 Cluster: Illuminance Measurement, Attribute: max measured value, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)2  } }, /* 9 Cluster: Illuminance Measurement, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x8000  } }, /* 10 Cluster: Temperature Measurement, Attribute: measured value, Side: server*/ \
		  { 0x0001, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x8000  } }, /* 11 Cluster: Temperature Measurement, Attribute: min measured value, Side: server*/ \
		  { 0x0002, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x8000  } }, /* 12 Cluster: Temperature Measurement, Attribute: max measured value, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)3  } }, /* 13 Cluster: Temperature Measurement, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0000  } }, /* 14 Cluster: Pressure Measurement, Attribute: measured value, Side: server*/ \
		  { 0x0001, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 15 Cluster: Pressure Measurement, Attribute: min measured value, Side: server*/ \
		  { 0x0002, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 16 Cluster: Pressure Measurement, Attribute: max measured value, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)2  } }, /* 17 Cluster: Pressure Measurement, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 18 Cluster: Relative Humidity Measurement, Attribute: measured value, Side: server*/ \
		  { 0x0001, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 19 Cluster: Relative Humidity Measurement, Attribute: min measured value, Side: server*/ \
		  { 0x0002, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x00  } }, /* 20 Cluster: Relative Humidity Measurement, Attribute: max measured value, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)2  } }, /* 21 Cluster: Relative Humidity Measurement, Attribute: cluster revision, Side: server*/ \
		  { 0x0100, ZCL_INT16S_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x8000  } }, /* 22 Cluster: Electrical Measurement, Attribute: dc voltage, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)3  } }, /* 23 Cluster: Electrical Measurement, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_WRITABLE| ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x00  } }, /* 24 Cluster: Particle Measurement PM1, Attribute: Measured pm1, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x0001  } }, /* 25 Cluster: Particle Measurement PM1, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_WRITABLE| ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x00  } }, /* 26 Cluster: Particle Measurement PM2_5, Attribute: Measured pm25, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x0001  } }, /* 27 Cluster: Particle Measurement PM2_5, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_WRITABLE| ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x00  } }, /* 28 Cluster: Particle Measurement PM10, Attribute: Measured pm10, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x0001  } }, /* 29 Cluster: Particle Measurement PM10, Attribute: cluster revision, Side: server*/ \
		  { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_WRITABLE| ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x00  } }, /* 30 Cluster: UV Measurement, Attribute: Measured UV, Side: server*/ \
		  { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_MANUFACTURER_SPECIFIC), { (uint8_t*)0x0001  } } /* 31 Cluster: UV Measurement, Attribute: cluster revision, Side: server*/ \
		 }

 

#define GENERATED_CLUSTER_COUNT (12)
	
// This is an array of EmberAfCluster structures.
#define GENERATED_CLUSTERS { \
  { 0x0000, (EmberAfAttributeMetadata*)&(generatedAttributes[0]), 3, 0, CLUSTER_MASK_SERVER, NULL }, /* 0, Endpoint Id: 1, Cluster: Basic, Side: server*/ \
	  { 0x0003, (EmberAfAttributeMetadata*)&(generatedAttributes[3]), 1, 2, CLUSTER_MASK_CLIENT, NULL }, /* 1, Endpoint Id: 1, Cluster: Identify, Side: client*/ \
	  { 0x0003, (EmberAfAttributeMetadata*)&(generatedAttributes[4]), 2, 4, CLUSTER_MASK_SERVER, NULL }, /* 2, Endpoint Id: 1, Cluster: Identify, Side: server*/ \
	  { 0x0400, (EmberAfAttributeMetadata*)&(generatedAttributes[6]), 4, 8, CLUSTER_MASK_SERVER, NULL }, /* 3, Endpoint Id: 1, Cluster: Illuminance Measurement, Side: server*/ \
	  { 0x0402, (EmberAfAttributeMetadata*)&(generatedAttributes[10]), 4, 8, CLUSTER_MASK_SERVER, NULL }, /* 4, Endpoint Id: 1, Cluster: Temperature Measurement, Side: server*/ \
	  { 0x0403, (EmberAfAttributeMetadata*)&(generatedAttributes[14]), 4, 8, CLUSTER_MASK_SERVER, NULL }, /* 5, Endpoint Id: 1, Cluster: Pressure Measurement, Side: server*/ \
	  { 0x0405, (EmberAfAttributeMetadata*)&(generatedAttributes[18]), 4, 8, CLUSTER_MASK_SERVER, NULL }, /* 6, Endpoint Id: 1, Cluster: Relative Humidity Measurement, Side: server*/ \
	  { 0x0B04, (EmberAfAttributeMetadata*)&(generatedAttributes[22]), 2, 4, CLUSTER_MASK_SERVER, NULL }, /* 7, Endpoint Id: 1, Cluster: Electrical Measurement, Side: server*/ \
	  { 0xFC11, (EmberAfAttributeMetadata*)&(generatedAttributes[24]), 2, 4, CLUSTER_MASK_SERVER, NULL }, /* 8, Endpoint Id: 1, Cluster: Particle Measurement PM1, Side: server*/ \
	  { 0xFC12, (EmberAfAttributeMetadata*)&(generatedAttributes[26]), 2, 4, CLUSTER_MASK_SERVER, NULL }, /* 9, Endpoint Id: 1, Cluster: Particle Measurement PM2_5, Side: server*/ \
	  { 0xFC13, (EmberAfAttributeMetadata*)&(generatedAttributes[28]), 2, 4, CLUSTER_MASK_SERVER, NULL }, /* 10, Endpoint Id: 1, Cluster: Particle Measurement PM10, Side: server*/ \
	  { 0xFC14, (EmberAfAttributeMetadata*)&(generatedAttributes[30]), 2, 4, CLUSTER_MASK_SERVER, NULL } /* 11, Endpoint Id: 1, Cluster: UV Measurement, Side: server*/ \
	 }

 
#define GENERATED_ENDPOINT_TYPE_COUNT (1)

// This is an array of EmberAfEndpointType structures.
#define GENERATED_ENDPOINT_TYPES { \
  { ((EmberAfCluster*)&(generatedClusters[0])), 12, 58 }, \
	 } 
// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (2)

// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (4)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE (58)

// Number of fixed endpoints	
#define FIXED_ENDPOINT_COUNT (1)

// Array of endpoints that are supported, the data inside the array is the
// endpoint number.
#define FIXED_ENDPOINT_ARRAY { \
  1 \
}

// Array of profile ids
#define FIXED_PROFILE_IDS { \
  260 \
}

// Array of device ids
#define FIXED_DEVICE_IDS { \
  65535 \
}

// Array of device versions
#define FIXED_DEVICE_VERSIONS { \
  1 \
}

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES { \
  0 \
}

// Array of networks supported on each endpoint
#define FIXED_NETWORKS { \
  0 \
}

// Array of EmberAfCommandMetadata structs.
#define ZAP_COMMAND_MASK(mask) COMMAND_MASK_ ## mask
#define EMBER_AF_GENERATED_COMMAND_COUNT  (3)
#define GENERATED_COMMANDS { \
  { 0x0003, 0x00, COMMAND_MASK_OUTGOING_CLIENT }, /* 0, Cluster: Identify, Command: Identify*/ \
	  { 0x0003, 0x00, COMMAND_MASK_INCOMING_CLIENT }, /* 1, Cluster: Identify, Command: IdentifyQueryResponse*/ \
	  { 0x0003, 0x01, COMMAND_MASK_OUTGOING_CLIENT }, /* 2, Cluster: Identify, Command: IdentifyQuery*/ \
	 } 
// Array of EmberAfManufacturerCodeEntry structures for commands.
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (0)
#define GENERATED_COMMAND_MANUFACTURER_CODES { \
  { 0x00, 0x00 }  \
			 } 
// This is an array of EmberAfManufacturerCodeEntry structures for clusters.
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (4)
#define GENERATED_CLUSTER_MANUFACTURER_CODES { \
								  { 8, 0x1002 },  \
	  { 9, 0x1002 },  \
	  { 10, 0x1002 },  \
	  { 11, 0x1002 },  \
	 } 
// This is an array of EmberAfManufacturerCodeEntry structures for attributes.
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (8)
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES { \
																								  { 24, 0x1002 },  \
	  { 25, 0x1002 },  \
	  { 26, 0x1002 },  \
	  { 27, 0x1002 },  \
	  { 28, 0x1002 },  \
	  { 29, 0x1002 },  \
	  { 30, 0x1002 },  \
	  { 31, 0x1002 },  \
	 } 
// Array of EmberAfPluginReportingEntry structures.
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (9)
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS { \
  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0x0400, 0x0000, CLUSTER_MASK_SERVER, 0x0000, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Illuminance Measurement, Attribute: measured value */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0x0402, 0x0000, CLUSTER_MASK_SERVER, 0x0000, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Temperature Measurement, Attribute: measured value */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0x0403, 0x0000, CLUSTER_MASK_SERVER, 0x0000, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Pressure Measurement, Attribute: measured value */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0x0405, 0x0000, CLUSTER_MASK_SERVER, 0x0000, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Relative Humidity Measurement, Attribute: measured value */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0x0B04, 0x0100, CLUSTER_MASK_SERVER, 0x0000, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Electrical Measurement, Attribute: dc voltage */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0xFC11, 0x0000, CLUSTER_MASK_SERVER, 0x1002, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Particle Measurement PM1, Attribute: Measured pm1 */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0xFC12, 0x0000, CLUSTER_MASK_SERVER, 0x1002, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Particle Measurement PM2_5, Attribute: Measured pm25 */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0xFC13, 0x0000, CLUSTER_MASK_SERVER, 0x1002, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: Particle Measurement PM10, Attribute: Measured pm10 */ \
	  { EMBER_ZCL_REPORTING_DIRECTION_REPORTED, 0x0001, 0xFC14, 0x0000, CLUSTER_MASK_SERVER, 0x1002, 1, 65534, 0 }, /* Endpoint Id: 1, Cluster: UV Measurement, Attribute: Measured UV */ \
	 } 

#define EMBER_AF_MANUFACTURER_CODE 0x1049
#define EMBER_AF_DEFAULT_RESPONSE_POLICY_ALWAYS

// All Enabled Clusters
#define ZCL_USING_BASIC_CLUSTER_SERVER
#define ZCL_USING_IDENTIFY_CLUSTER_CLIENT
#define ZCL_USING_IDENTIFY_CLUSTER_SERVER
#define ZCL_USING_ILLUM_MEASUREMENT_CLUSTER_SERVER
#define ZCL_USING_TEMP_MEASUREMENT_CLUSTER_SERVER
#define ZCL_USING_PRESSURE_MEASUREMENT_CLUSTER_SERVER
#define ZCL_USING_RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER_SERVER
#define ZCL_USING_ELECTRICAL_MEASUREMENT_CLUSTER_SERVER
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE_CLUSTER_SERVER
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE25_CLUSTER_SERVER
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE10_CLUSTER_SERVER
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_UV_CLUSTER_SERVER

// Cluster Counts
#define EMBER_AF_BASIC_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_IDENTIFY_CLUSTER_CLIENT_ENDPOINT_COUNT (1)
#define EMBER_AF_IDENTIFY_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_ILLUM_MEASUREMENT_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_TEMP_MEASUREMENT_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_PRESSURE_MEASUREMENT_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_ELECTRICAL_MEASUREMENT_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_SAMPLE_MFG_SPECIFIC_PARTICLE_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_SAMPLE_MFG_SPECIFIC_PARTICLE25_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_SAMPLE_MFG_SPECIFIC_PARTICLE10_CLUSTER_SERVER_ENDPOINT_COUNT (1)
#define EMBER_AF_SAMPLE_MFG_SPECIFIC_UV_CLUSTER_SERVER_ENDPOINT_COUNT (1)

// All Enabled Cluster Attributes
#define ZCL_USING_BASIC_CLUSTER_VERSION_ATTRIBUTE
#define ZCL_USING_BASIC_CLUSTER_POWER_SOURCE_ATTRIBUTE
#define ZCL_USING_BASIC_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_IDENTIFY_CLUSTER_CLUSTER_REVISION_CLIENT_ATTRIBUTE
#define ZCL_USING_IDENTIFY_CLUSTER_IDENTIFY_TIME_ATTRIBUTE
#define ZCL_USING_IDENTIFY_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_ILLUM_MEASUREMENT_CLUSTER_ILLUM_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_ILLUM_MEASUREMENT_CLUSTER_ILLUM_MIN_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_ILLUM_MEASUREMENT_CLUSTER_ILLUM_MAX_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_ILLUM_MEASUREMENT_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_TEMP_MEASUREMENT_CLUSTER_TEMP_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_TEMP_MEASUREMENT_CLUSTER_TEMP_MIN_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_TEMP_MEASUREMENT_CLUSTER_TEMP_MAX_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_TEMP_MEASUREMENT_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_PRESSURE_MEASUREMENT_CLUSTER_PRESSURE_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_PRESSURE_MEASUREMENT_CLUSTER_PRESSURE_MIN_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_PRESSURE_MEASUREMENT_CLUSTER_PRESSURE_MAX_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_PRESSURE_MEASUREMENT_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER_RELATIVE_HUMIDITY_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER_RELATIVE_HUMIDITY_MIN_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER_RELATIVE_HUMIDITY_MAX_MEASURED_VALUE_ATTRIBUTE
#define ZCL_USING_RELATIVE_HUMIDITY_MEASUREMENT_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_ELECTRICAL_MEASUREMENT_CLUSTER_DC_VOLTAGE_ATTRIBUTE
#define ZCL_USING_ELECTRICAL_MEASUREMENT_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE_CLUSTER_ATTRIBUTE_ONE_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE25_CLUSTER_MEASURED_PM25_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE25_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE10_CLUSTER_MEASURED_PM10_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_PARTICLE10_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_UV_CLUSTER_MEASURED_UV_ATTRIBUTE
#define ZCL_USING_SAMPLE_MFG_SPECIFIC_UV_CLUSTER_CLUSTER_REVISION_SERVER_ATTRIBUTE

#define EMBER_AF_SUPPORT_COMMAND_DISCOVERY


#endif // SILABS_AF_ENDPOINT_CONFIG